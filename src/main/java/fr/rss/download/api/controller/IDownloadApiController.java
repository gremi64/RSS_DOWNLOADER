/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package fr.rss.download.api.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import fr.rss.download.api.constantes.Const;
import fr.rss.download.api.exceptions.ApiException;
import fr.rss.download.api.model.RemoteFile;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@Api(value = "download")
public interface IDownloadApiController {

	@ApiOperation(value = "Lance le téléchargement d'un lien passé en paramètre", response = RemoteFile.class, tags = { "download" })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "Téléchargement ok", response = RemoteFile.class),
			@ApiResponse(code = 500, message = "Erreur lors du traitement", response = ApiException.class) })

	@RequestMapping(value = "/download", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<?> downloadLink(@ApiParam(value = "Lien à débrider", required = true) @RequestParam("link") String link,
			@ApiParam(value = "Nom du fichier à télécharger", required = true) @RequestParam("filename") String filename,
			@ApiParam(value = "Destination du fichier à télécharger", required = false, defaultValue = Const.DEFAULT_VALUE) @RequestParam("destination") String destination)
					throws ApiException;

	@ApiOperation(value = "Lance le téléchargement d'un lien passé en paramètre", response = RemoteFile.class, tags = { "download" })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "Téléchargement ok", response = RemoteFile.class),
			@ApiResponse(code = 500, message = "Erreur lors du traitement", response = ApiException.class) })

	@RequestMapping(value = "/downloadTvShow", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<?> downloadTvShow(@ApiParam(value = "Nom de la serie TV", required = true) @RequestParam("tvShowName") String tvShowName,
			@ApiParam(value = "Qualité (HDTV, HD720P, HD1080P)", required = true, defaultValue = "HD720P") @RequestParam("qualite") String qualite,
			@ApiParam(value = "Langue (VOSTFR, FRENCH, MULTI, ...)", required = true, defaultValue = "VOSTFR") @RequestParam("langue") String langue,
			@ApiParam(value = "Numero de la saison (1, 2, 3, ...)", required = true) @RequestParam("saison") String saison,
			@ApiParam(value = "Numero de l'épisode (1, 2, 3, ...)", required = true) @RequestParam("episode") String episode) throws ApiException;

}
